import os
import uuid
import logging
from minio import Minio

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
MINIO_ENDPOINT = os.getenv("MINIO_ENDPOINT", "localhost:9000")
MINIO_ACCESS_KEY = os.getenv("MINIO_ROOT_USER", "minioadmin")
MINIO_SECRET_KEY = os.getenv("MINIO_ROOT_PASSWORD", "minioadmin")
BUCKET_NAME = os.getenv("BUCKET_NAME", "videos")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ MinIO
client = Minio(
    MINIO_ENDPOINT,
    access_key=MINIO_ACCESS_KEY,
    secret_key=MINIO_SECRET_KEY,
    secure=False,
)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∫–µ—Ç–∞
try:
    if not client.bucket_exists(BUCKET_NAME):
        client.make_bucket(BUCKET_NAME)
        logger.info(f"ü™£ MinIO: –ë–∞–∫–µ—Ç `{BUCKET_NAME}` —Å–æ–∑–¥–∞–Ω")
    else:
        logger.info(f"‚úÖ MinIO: –ë–∞–∫–µ—Ç `{BUCKET_NAME}` —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
except Exception as e:
    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MinIO: {str(e)}")


# üì• –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –∏–∑ MinIO
def download_from_minio(object_name: str) -> str:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç object_name –∏–∑ MinIO –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É.
    """
    os.makedirs("temp", exist_ok=True)
    local_path = os.path.join("temp", f"{uuid.uuid4()}_{object_name}")

    try:
        client.fget_object(BUCKET_NAME, object_name, local_path)
        logger.info(f"‚¨áÔ∏è –í–∏–¥–µ–æ {object_name} —Å–∫–∞—á–∞–Ω–æ –≤ {local_path}")
        return local_path
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {object_name} –∏–∑ MinIO: {str(e)}")
        raise
