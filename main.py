import logging
from fastapi import FastAPI
from database import engine, Base
import routers.alerts
from prometheus_fastapi_instrumentator import Instrumentator

# üîπ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s"
)
logger = logging.getLogger(__name__)

app = FastAPI()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –≤ –ë–î (–µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
Base.metadata.create_all(bind=engine)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ API-—Ä–æ—É—Ç–æ–≤
app.include_router(routers.alerts.router)

# üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ Prometheus
Instrumentator().instrument(app).expose(app, endpoint="/metrics")

# @app.middleware("http")
# async def log_requests(request, call_next):
#     logger.info(f"–ó–∞–ø—Ä–æ—Å: {request.method} {request.url}")
#     response = await call_next(request)
#     logger.info(f"–û—Ç–≤–µ—Ç: {response.status_code}")
#     return response


@app.get("/")
def read_root():
    return {"message": "API is working!"}
