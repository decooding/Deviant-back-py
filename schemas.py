from pydantic import BaseModel
from pydantic import BaseModel, ConfigDict
from datetime import datetime


class AlertBase(BaseModel):
    type: str
    description: str


class AlertCreate(AlertBase):
    """üìå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç—Ä–µ–≤–æ–≥–∏ (POST /alerts/)"""

    pass


class AlertResponse(AlertBase):
    """üìå –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ API (GET /alerts/, GET /alerts/{id})"""

    id: int
    timestamp: datetime
    model_config = ConfigDict(from_attributes=True)


# ‚úÖ –°—Ö–µ–º–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserCreate(BaseModel):
    username: str
    password: str


# ‚úÖ –°—Ö–µ–º–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É
class UserLogin(BaseModel):
    username: str
    password: str


# ‚úÖ –°—Ö–µ–º–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class UserResponse(BaseModel):
    id: int
    username: str


# ‚úÖ –°—Ö–µ–º–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è JWT-—Ç–æ–∫–µ–Ω–∞
class TokenResponse(BaseModel):
    access_token: str
    token_type: str
